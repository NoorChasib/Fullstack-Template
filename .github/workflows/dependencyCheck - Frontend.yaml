name: Dependency Check - Frontend

on:
  schedule:
    - cron: "0 0 1,15 * *" # Runs at midnight on the 1st and 15th of every month
  workflow_dispatch:

jobs:
  check-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ["frontend"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies
        run: |
          cd src/${{ matrix.dir }}
          npm install

      - name: Check for outdated dependencies
        id: outdated
        run: |
          OUTDATED=$(npm outdated || true)
          echo "::set-output name=outdatedPackages::$OUTDATED"
          if [ ! -z "$OUTDATED" ]; then
            echo "::set-output name=outdated::true"
            echo "Outdated dependencies in ${{ matrix.dir }}:"
            echo "$OUTDATED"
          fi

      - name: Create GitHub Issue
        if: steps.outdated.outputs.outdated == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const title = `Outdated Dependencies Detected in ${{ matrix.dir }}`
            let body = `There are outdated dependencies in the ${{ matrix.dir }} directory:\n`
            body += `${{ steps.outdated.outputs.outdatedPackages }}`
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body
            })
